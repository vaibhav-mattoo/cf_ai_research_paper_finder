name: Quick Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

permissions:
  contents: read
  deployments: write

jobs:
  deploy:
    name: Deploy Backend to ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy Backend
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy ${{ github.event.inputs.environment == 'staging' && '--env staging' || '' }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Deployment Complete
        run: |
          echo "‚úÖ Backend deployment to ${{ github.event.inputs.environment }} complete!"
          if [ "${{ github.event.inputs.environment }}" == "production" ]; then
            echo "üåê Production URLs:"
            echo "Backend: https://cf-ai-research-paper-finder.vaibhavmattoo1.workers.dev"
            echo "Frontend: https://5b04b033.cf-ai-research-paper-finder-frontend.pages.dev"
          else
            echo "üß™ Staging URLs:"
            echo "Backend: https://cf-ai-research-paper-finder-staging.vaibhavmattoo1.workers.dev"
          fi